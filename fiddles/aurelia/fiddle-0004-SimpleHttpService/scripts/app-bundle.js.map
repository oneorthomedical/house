{"version":3,"sources":["src/alphavantage.service.js","src/app.js","src/data-file.service.js","src/environment.js","src/main.js","src/resources/index.js"],"names":["AlphaVantageService","http","configure","config","withBaseUrl","json","window","setTimeout","request","self","get","then","App","observerLocator","alphaVantageService","dataFileService","jsonService","getService","subscriptions","jsonGetData","jsonData","activate","params","queryString","routeConfig","push","getObserver","subscribe","newValue","oldValue","JSON","stringify","deactivate","length","pop","DataFileService","_json","_http","init","val","js","debug","testing","aurelia","meta","fiddleHeader","urls","github","consoleTag","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","console","log","group"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from \"aurelia-http-client\";\nimport { inject } from \"aurelia-framework\";\n\n\n@inject(HttpClient)\nexport class AlphaVantageService {\n\n    constructor(http) {\n        http.configure((config) => {\n            config.withBaseUrl('https://www.alphavantage.co/');\n        });\n        http.configure((config) => {\n            config.withBaseUrl();\n        });\n        this.json = null;\n        this.http = http;\n        window.setTimeout(() => {\n          this.request();\n        }, 2000);\n    }\n\n    request() {\n        let self = this;\n      this.http.get('https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&apikey=demo')\n        .then(json => this.json = json);\n    }\n\n}\n","import { AlphaVantageService } from './alphavantage.service';\nimport { DataFileService } from './data-file.service';\nimport { inject } from \"aurelia-framework\";\nimport { ObserverLocator } from 'aurelia-framework';\n\n@inject(ObserverLocator, AlphaVantageService, DataFileService)\nexport class App {\n\n  /* See http://hobbit-on-aurelia.net/viewmodel-observable-management/ */\n\n  constructor(observerLocator, alphaVantageService, dataFileService) {\n\n    this.jsonService = dataFileService;\n    this.getService = alphaVantageService;\n    this.observerLocator = observerLocator;\n    this.subscriptions = [];\n    this.jsonGetData = this.jsonData = 'loading ...';\n\n  }\n\n  activate(params, queryString, routeConfig) {\n\n    this.subscriptions.push(\n      this.observerLocator.getObserver(this.jsonService, 'json').subscribe(\n        (newValue, oldValue) => {\n        if (newValue !== oldValue) {\n      this.jsonData = JSON.stringify(this.jsonService.json);\n    }\n  })\n  );\n\n    this.subscriptions.push(\n      this.observerLocator.getObserver(this.getService, 'json').subscribe(\n        (newValue, oldValue) => {\n        if (newValue !== oldValue) {\n      this.jsonGetData = JSON.stringify(this.getService.json);\n    }\n  })\n  );\n  }\n\n  deactivate() {\n    while (this.subscriptions.length) {\n      this.subscriptions.pop()();\n    }\n  }\n\n\n}\n","import { HttpClient } from \"aurelia-http-client\";\nimport { inject } from \"aurelia-framework\";\n\n\n/* See http://stackoverflow.com/questions/32174584/aurelia-http-fetch-client-no-access-control-for-tumblr-api */\n@inject(HttpClient)\nexport class DataFileService {\n\n    constructor(http) {\n        this._json = null;\n        this._http = http;\n      window.setTimeout(() => {\n        this.init();\n      }, 1000);\n\n    }\n\n    set http(val) {\n        this._http = val;\n    }\n\n    get http() {\n        return this._http;\n    }\n\n    get json() {\n        return this._json;\n    }\n\n    set json(js) {\n        this._json = js;\n    }\n\n    init() {\n        this.http.configure((config) => {\n            config.withBaseUrl('/');\n        });\n\n        this.http.get('data.json')\n            .then(json => this.json = json);\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  let meta = {\n    fiddleHeader: 'fiddle-0004-SimpleHttpService',\n      urls: {\n      github: 'https://github.com/bradyhouse/house/tree/master/fiddles/aurelia/fiddle-0004-SimpleHttpService'\n    },\n    consoleTag: 'H O U S E ~ f i d d l e s'\n  };\n\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n\n  console.log(\"%c\" + meta.consoleTag, 'font-style: italic; font-size: 20px;');\n  console.log(\"%c\" + meta.urls.github, \"color: blue; font-style: italic; text-decoration: underline; background-color: #FFFF00;\");\n  console.group();\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}